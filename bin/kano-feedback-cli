#!/usr/bin/env python

# kano-feedback-cli
#
# Copyright (C) 2014-2018 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU GPL v2

"""
kano-feedback-cli allows for gathering kano-feedback data into a
    local tar compressed file. Requires sudo.

Usage:
    kano-feedback-cli [options]
    kano-feedback-cli -h | --help

Options:
    -o, --output=<path>
                    Write the logs to a specific path. Default is
                    /tmp/kano-feedback-cli.tar.gz
    -f, --flag=<path>
                    Create a file flag if the operation was successful.
    -s, --screenshot
                    Take a screenshot and attach it to the report.
    -t, --title=<title>
                    The title of the email when sending the logs.
                    Default is "Kano OS: Feedback Report Logs"
    -d, --description=<description>
                    The description of the email when sending the logs.
                    Default is an empty string.
    -c, --with-checks
                    Run the Internet and Kano World checks beforehand. This
                    will popup the apps to configure connections.
    -j, --just-checks
                    Same as --with-checks but the program will then exit.
    -z, --send      Send the logs to the dev servers.
    -h, --help      Show this message.

Values:
    <path>          A full path to a file.
    <title>         The str value of the option.
    <description>   The str value of the option.
"""


from os.path import abspath, join, dirname
import sys

import docopt

if __name__ == '__main__' and __package__ is None:
    DIR_PATH = abspath(join(dirname(__file__), '..'))
    if DIR_PATH != '/usr':
        sys.path.insert(0, DIR_PATH)

from kano_feedback.kano_feedback_cli import main
from kano_feedback.return_codes import RC


if __name__ == '__main__':
    # Show the entire docstring when incorrect arguments are given.
    try:
        args = docopt.docopt(__doc__)
    except docopt.DocoptExit:
        print __doc__
        sys.exit(RC.INCORRECT_ARGS)

    sys.exit(main(args) or RC.SUCCESS)
